# CI/CD Pipeline for Dreamscape Tests
name: Dreamscape Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'

permissions:
  contents: read
  pull-requests: write

concurrency: ci-${{ github.ref }}

jobs:
  # --- nouveau : BUILD (requis par la règle) ---
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: dreamscape-tests/package-lock.json
      - run: npm ci
        working-directory: dreamscape-tests
      - run: npm run build --if-present
        working-directory: dreamscape-tests

  # --- nouveau : LINT (requis par la règle) ---
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: dreamscape-tests/package-lock.json
      - run: npm ci
        working-directory: dreamscape-tests
      - run: npm run lint --if-present
        working-directory: dreamscape-tests

  # --- tes jobs existants (exemples, garde ta logique) ---
  unit-tests:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 18, cache: npm, cache-dependency-path: dreamscape-tests/package-lock.json }
      - run: npm ci
        working-directory: dreamscape-tests
      - name: Run unit tests
        run: |
          if [ -z "$(find dreamscape-tests -name '*.test.js')" ]; then
            echo "No tests found. Skipping tests."
            exit 0
          fi
          npm run test:unit
        working-directory: .

  integration-tests:
    needs: [build]
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:5
        ports: [ "27017:27017" ]
      redis:
        image: redis:7
        ports: [ "6379:6379" ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 18, cache: npm, cache-dependency-path: dreamscape-tests/package-lock.json }
      - run: npm ci
        working-directory: dreamscape-tests
      - name: Run integration tests
        env:
          TEST_DATABASE_URL: mongodb://localhost:27017/dreamscape_test
          REDIS_URL: redis://localhost:6379
        run: |
          if [ -z "$(find dreamscape-tests -name '*.test.integration.js')" ]; then
            echo "No integration tests found. Skipping tests."
            exit 0
          fi
          npm run test:integration

  e2e-tests:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 18, cache: npm, cache-dependency-path: dreamscape-tests/package-lock.json }
      - run: npm ci
        working-directory: dreamscape-tests
      - name: Start services
        run: |
          docker compose -f docker-compose.test.yml up -d
          sleep 30
      - name: Run E2E tests
        run: |
          if [ -z "$(find dreamscape-tests -name '*.test.e2e.js')" ]; then
            echo "No E2E tests found. Skipping tests."
            exit 0
          fi
          npm run test:e2e
      - name: Stop services
        if: always()
        run: docker compose -f docker-compose.test.yml down

  # --- nouveau : TEST agrégateur (requis par la règle) ---
  test:
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, e2e-tests]  # ajoute ici performance/security/accessibility si tu veux qu'ils bloquent
    steps:
      - run: echo "All tests green ✅"
